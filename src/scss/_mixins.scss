$positionList: (top right bottom left margin-top margin-bottom margin-left margin-right);
@mixin position($position, $args) {
    @each $o in $positionList {
        $i: index($args, $o);
        @if $i and $i+1 <=length($args) and type-of(nth($args, $i + 1))==number {
            #{$o}: nth($args, $i + 1);
        }
    }
    position: $position;
}

@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin flex($values) {
    -webkit-box-flex: $values;
    -moz-box-flex: $values;
    -webkit-flex: $values;
    -ms-flex: $values;
    flex: $values;
}

@mixin flex-direction($direction) {
    -webkit-flex-direction: $direction;
    -moz-flex-direction: $direction;
    -ms-flex-direction: $direction;
    flex-direction: $direction;
}

@mixin flex-grow($grow) {
    -webkit-flex-grow: $grow;
    -moz-flex-grow: $grow;
    -ms-flex-grow: $grow;
    flex-grow: $grow;
}

@mixin flex-shrink($shrink) {
    -webkit-flex-shrink: $shrink;
    -moz-flex-shrink: $shrink;
    -ms-flex-shrink: $shrink;
    flex-shrink: $shrink;
}

@mixin flex-basis($width) {
    -webkit-flex-basis: $width;
    -moz-flex-basis: $width;
    -ms-flex-basis: $width;
    flex-basis: $width;
}

@mixin justify-content($justify) {
    -webkit-justify-content: $justify;
    -moz-justify-content: $justify;
    -ms-justify-content: $justify;
    justify-content: $justify;
    -ms-flex-pack: $justify;
}

@mixin align-content($align) {
    -webkit-align-content: $align;
    -moz-align-content: $align;
    -ms-align-content: $align;
    align-content: $align;
}

@mixin align-items($align) {
    -webkit-align-items: $align;
    -moz-align-items: $align;
    -ms-align-items: $align;
    align-items: $align;
}

@mixin align-self($align) {
    -webkit-align-self: $align;
    -moz-align-self: $align;
    -ms-align-self: $align;
    align-self: $align;
}

$flexArgs: (
    'f': flex,
    'fd': flex-direction,
    'fg': flex-grow,
    'fs': flex-shrink,
    'fb': flex-basis,
    'jc': justify-content,
    'ac': align-content,
    'ai': align-items,
    'as': align-self
);

$flexArgs: 'f', 'fd', 'fg', 'fs', 'fb', 'jc', 'ac', 'ai', 'as';

@mixin megaFlex($args) {
    @include flexbox();
    @each $abbr in $flexArgs {
        $i: index($args, $abbr);
        
        @if $i and $i+1 <= length($args) {

            $prop: unquote(nth($args, $i+1));

            @if ($abbr=='f') {
                @include flex(#{$prop});
            }
            @if ($abbr=='fd') {
                @include flex-direction(#{$prop});
            }
            @if ($abbr=='fg') {
                @include flex-grow(#{$prop});
            }
            @if ($abbr=='fs') {
                @include flex-shrink(#{$prop});
            }
            @if ($abbr=='fb') {
                @include flex-basis(#{$prop});
            }
            @if ($abbr=='jc') {
                @include justify-content(#{$prop});
            }
            @if ($abbr=='ac') {
                @include align-content(#{$prop});
            }
            @if ($abbr=='ai') {
                @include align-items(#{$prop});
            }
            @if ($abbr=='as') {
                @include align-self(#{$prop});
            }
        }
    }
}

@mixin exactWidth($w) {
    width: $w;
    min-width: $w;
    max-width: $w;
}

@mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    -ms-transition: $args;
    -o-transition: $args;
    transition: $args;
}

@mixin box($width, $height: $width) {
    width: $width;
    height: $height;
}

@mixin prefix($map, $vendors: webkit moz ms o) {

    @each $prop,
    $value in $map {
        @if $vendors {
            @each $vendor in $vendors {
                #{"-" + $vendor + "-" + $prop}: #{$value};
            }
        }

        // Dump regular property anyway
        #{$prop}: #{$value};
    }
}